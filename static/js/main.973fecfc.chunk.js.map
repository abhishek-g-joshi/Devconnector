{"version":3,"sources":["utils/setAuthToken.js","actions/authActions.js","actions/types.js","actions/profileActions.js","components/layout/Navbar.js","components/layout/Footer.js","components/layout/Landing.js","components/common/TextFieldGroup.js","components/auth/Register.js","components/auth/Login.js","components/dashboard/Dashboard.js","validation/is-empty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/profileReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","setProfileLoading","clearCurrentProfile","Navbar","e","preventDefault","this","props","auth","isAuthenticated","user","authLinks","className","href","onClick","onLogoutClick","bind","src","avatar","alt","name","style","width","marginRight","title","guestLinks","to","data-toggle","data-target","id","Component","connect","state","Date","getFullYear","Landing","history","push","TextFieldGroup","placeholder","value","label","error","info","onChange","disabled","Classnames","defaultProps","Register","email","password","password2","errors","onSubmit","nextProps","setState","target","newUser","registerUser","noValidate","userData","post","then","res","catch","err","response","data","withRouter","Login","loginUser","setItem","jwt_decode","Dashboard","getCurrentProfile","get","isEmpty","undefined","Object","keys","length","trim","initialState","profile","profiles","loading","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","jwtToken","currentTime","now","exp","location","App","exact","path","component","Footer","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.973fecfc.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    //Apply to every request\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    //Delete auth header\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { GET_ERRORS,SET_CURRENT_USER } from \"./types\";\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\nimport axios from \"axios\";\r\n\r\n\r\n//Register user\r\n\r\nexport const registerUser = (userData, history) => (dispatch) => {\r\n  axios\r\n    .post(\"/api/users/register\", userData)\r\n    .then((res) => history.push(\"/login\"))\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n};\r\n\r\n//Login -Get User Token\r\nexport const loginUser = userData => dispatch  =>{\r\n  axios\r\n    .post('/api/users/login',userData)\r\n    .then(res=>{\r\n      //save token to localStorage\r\n      const {token} = res.data;\r\n      //set token to LS\r\n      localStorage.setItem('jwtToken',token);\r\n      //Set token to auth header\r\n      setAuthToken(token);\r\n      //Decode token to get user data\r\n      const decoded = jwt_decode(token);\r\n      //Set current user\r\n      dispatch(setCurrentUser(decoded));\r\n    })\r\n    .catch(err=>\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data,\r\n      })\r\n    );\r\n}\r\n\r\n //Set logged in USER\r\n export const setCurrentUser = (decoded) =>{\r\n   return{\r\n     type: SET_CURRENT_USER,\r\n     payload: decoded\r\n   }\r\n }\r\n\r\n //Log user out\r\n export const logoutUser = () => dispatch =>{\r\n   //Remove token from localStorage\r\n   localStorage.removeItem('jwtToken');\r\n   //Remove auth header for future requests\r\n   setAuthToken(false);\r\n   //Set current user to {} and isAuthenticated to false\r\n   dispatch(setCurrentUser({}));\r\n }","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const PROFILE_LOADING = \"PROFILE_LOADING\";\r\nexport const PROFILE_NOT_FOUND = \"PROFILE_NOT_FOUND\";\r\nexport const CLEAR_CURRENT_PROFILE = \"CLEAR_CURRENT_PROFILE\";\r\nexport const GET_PROFILES = \"GET_PROFILES\";\r\n","import axios from \"axios\";\r\nimport { GET_PROFILE, PROFILE_LOADING, CLEAR_CURRENT_PROFILE } from \"./types\";\r\n\r\n//GET current Profile\r\n\r\nexport const getCurrentProfile = () => (dispatch) => {\r\n  dispatch(setProfileLoading());\r\n  axios\r\n    .get(\"/api/profile\")\r\n    .then((res) =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) =>\r\n      dispatch({\r\n        type: GET_PROFILE,\r\n        payload: {},\r\n      })\r\n    );\r\n};\r\n\r\n//Profile Loading\r\nexport const setProfileLoading = () => {\r\n  return {\r\n    type: PROFILE_LOADING,\r\n  };\r\n};\r\n\r\n//Clear Profile\r\nexport const clearCurrentProfile = () => {\r\n  return {\r\n    type: CLEAR_CURRENT_PROFILE,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions/authActions\";\r\nimport {clearCurrentProfile} from '../../actions/profileActions';\r\nclass Navbar extends Component {\r\n  onLogoutClick(e) {\r\n    e.preventDefault();\r\n    this.props.clearCurrentProfile();\r\n    this.props.logoutUser();\r\n  }\r\n  render() {\r\n    const { isAuthenticated, user } = this.props.auth;\r\n\r\n    const authLinks = (\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <a\r\n            href=\"#\"\r\n            onClick={this.onLogoutClick.bind(this)}\r\n            className=\"nav-link\"\r\n          >\r\n            <img\r\n              className=\"rounded-circle\"\r\n              src={user.avatar}\r\n              alt={user.name}\r\n              style={{ width: \"25px\", marginRight: \"5px\" }}\r\n              title=\"You must have to Gravatar connected to your email to display the image\"\r\n            />{\" \"}\r\n            Logout\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n\r\n    const guestLinks = (\r\n      <ul className=\"navbar-nav ml-auto\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/register\">\r\n            Sign Up\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/login\">\r\n            Login\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    );\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n        <div className=\"container\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            DevConnector\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/profiles\">\r\n                  {\" \"}\r\n                  Developers\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            {isAuthenticated ? authLinks : guestLinks}\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  logoutUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, { logoutUser,clearCurrentProfile })(Navbar);\r\n","import React from 'react'\r\nimport text from 'body-parser/lib/types/text'\r\n\r\nexport default ()=> {\r\n    return (\r\n        <footer className=\"bg-dark text-white mt-5 p-4 text-center\">\r\n            Copyright &copy; {new Date().getFullYear()} DevConnecter\r\n        </footer>\r\n    )\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"dark-overlay landing-inner text-light\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">Developer Connector</h1>\r\n                <p className=\"lead\">\r\n                  {\" \"}\r\n                  Create a developer profile/portfolio, share posts and get help\r\n                  from other developers\r\n                </p>\r\n                <hr />\r\n                <Link to=\"/register\" className=\"btn btn-lg btn-info mr-2\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-light\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n});\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React from \"react\";\r\nimport Classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextFieldGroup = ({\r\n  name,\r\n  placeholder,\r\n  value,\r\n  label,\r\n  type,\r\n  error,\r\n  info,\r\n  onChange,\r\n  disabled,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type={type}\r\n        className={Classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange}\r\n        disabled={disabled}\r\n      />\r\n      {info && <small className=\"form-text text-muted\">{info}</small>}\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextFieldGroup.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string,\r\n  value: PropTypes.string.isRequired,\r\n  info: PropTypes.string,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  disabled: PropTypes.string,\r\n};\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\nexport default TextFieldGroup;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      password2: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    const newUser = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      password2: this.state.password2,\r\n    };\r\n\r\n    this.props.registerUser(newUser, this.props.history);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">\r\n                Create your DevConnector account\r\n              </p>\r\n              <form noValidate onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"Name\"\r\n                  name=\"name\"\r\n                  type=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.onChange}\r\n                  error={errors.name}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Email Address\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                  info=\"This site uses Gravatar so if you want a profile image, use\r\n                  a Gravatar email\"\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={errors.password}\r\n                />\r\n                <TextFieldGroup\r\n                  placeholder=\"Confirmed Password\"\r\n                  name=\"password2\"\r\n                  type=\"password2\"\r\n                  value={this.state.password2}\r\n                  onChange={this.onChange}\r\n                  error={errors.password2}\r\n                />\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  registerUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport TextFieldGroup from \"../common/TextFieldGroup\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.auth.isAuthenticated) {\r\n      this.props.history.push(\"/dashboard\");\r\n    }\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const userData = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.loginUser(userData);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <p className=\"lead text-center\">\r\n                Sign in to your DevConnector account\r\n              </p>\r\n              <form noValidate onSubmit={this.onSubmit}>\r\n                <TextFieldGroup\r\n                  placeholder=\"Email Address\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.onChange}\r\n                  error={errors.email}\r\n                />\r\n\r\n                <TextFieldGroup\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={this.state.password}\r\n                  onChange={this.onChange}\r\n                  error={errors.password}\r\n                />  \r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  loginUser: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { loginUser })(Login);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getCurrentProfile} from '../../actions/profileActions';\r\n\r\n\r\nclass Dashboard extends Component {\r\n    componentDidMount(){\r\n        this.props.getCurrentProfile();\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Dashboard</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null,{getCurrentProfile})(Dashboard);","const isEmpty = (value) =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n  (typeof value === \"string\" && value.trim().length === 0);\r\n\r\nexport default isEmpty;\r\n","import { SET_CURRENT_USER } from \"../actions/types\";\r\nimport isEmpty from '../validation/is-empty';\r\n\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_ERRORS } from \"../actions/types\";\r\nconst initialState = {};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_PROFILE,\r\n  PROFILE_LOADING,\r\n  CLEAR_CURRENT_PROFILE,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  profiles: null,\r\n  loading: false,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case PROFILE_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case GET_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: action.payload,\r\n        loading: false,\r\n      };\r\n    case CLEAR_CURRENT_PROFILE:\r\n      return {\r\n        ...state,\r\n        profile: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\n\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  profile: profileReducer,\r\n});\r\n","import { createStore, applyMiddleware,compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n  \r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\nimport { clearCurrentProfile } from \"./actions/profileActions\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Footer from \"./components/layout/Footer\";\nimport Landing from \"./components/layout/Landing\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport store from \"./store\";\nimport \"./App.css\";\n\n//Check for token\nif (localStorage.jwtToken) {\n  //set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  //Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  //Set user and is Authenticated\n  store.dispatch(setCurrentUser(decoded));\n  //Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    //Logout User\n    store.dispatch(logoutUser());\n\n    //Clear current Profile\n    store.dispatch(clearCurrentProfile());\n    //Redirect to login\n    window.location.href = \"/login\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Navbar />\n          <Route exact path=\"/\" component={Landing} />\n          <div className=\"container\">\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}